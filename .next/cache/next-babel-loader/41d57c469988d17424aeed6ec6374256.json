{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { withTranslation } from '../i18n'; //styling\n\nimport { Container, Row, Button, Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText } from 'reactstrap'; //icons & colors\n\nimport { FaSearch } from 'react-icons/fa';\nimport { COLORS } from '../Helper/Constants';\n\nvar MainPage = /*#__PURE__*/function (_Component) {\n  _inherits(MainPage, _Component);\n\n  var _super = _createSuper(MainPage);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_toggleDropDown\", function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBodyContainer\", function () {\n      var t = _this.props.t;\n      return __jsx(Container, {\n        fluid: true,\n        className: \"spacing\"\n      }, __jsx(\"div\", {\n        className: \"products-section\"\n      }, __jsx(\"h3\", {\n        className: \"section-title\"\n      }, t('featured-products')), __jsx(Row, null, __jsx(Card, {\n        className: \"products-card\"\n      }, __jsx(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: \"/assets/318x180.svg\",\n        alt: \"Card image cap\"\n      }), __jsx(CardBody, null, __jsx(CardTitle, null, \"Card title\"), __jsx(CardSubtitle, null, \"Card subtitle\"), __jsx(CardText, null, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, null, \"Button\"))))));\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"render\",\n    value: function render() {\n      var favIndex = this.state.favIndex;\n      var t = this.props.t;\n      return __jsx(\"div\", {\n        className: \"main-page-container\"\n      }, this.renderBodyContainer());\n    }\n    /*\n    .##........#######...######...####..######...######.\n    .##.......##.....##.##....##...##..##....##.##....##\n    .##.......##.....##.##.........##..##.......##......\n    .##.......##.....##.##...####..##..##........######.\n    .##.......##.....##.##....##...##..##.............##\n    .##.......##.....##.##....##...##..##....##.##....##\n    .########..#######...######...####..######...######.\n    */\n\n  }]);\n\n  return MainPage;\n}(Component);\n\nMainPage.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('mainpage')(MainPage);","map":{"version":3,"sources":["C:/Users/PAVAN TANK/Desktop/New folder/Dealbab/components/MainPage.js"],"names":["React","Component","PropTypes","Head","withTranslation","Container","Row","Button","Card","CardImg","CardBody","CardTitle","CardSubtitle","CardText","FaSearch","COLORS","MainPage","props","setState","dropdownOpen","state","t","favIndex","renderBodyContainer","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,QAAgC,SAAhC,C,CAGA;;AACA,SACEC,SADF,EACaC,GADb,EACkBC,MADlB,EAC0BC,IAD1B,EACgCC,OADhC,EACyCC,QADzC,EACmDC,SADnD,EAC8DC,YAD9D,EAC4EC,QAD5E,QAEO,YAFP,C,CAIA;;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,sEA4BD,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE,CAAC,MAAKC,KAAL,CAAWD;AAA5B,OAAd;AACD,KA9BkB;;AAAA,0EA0CG,YAAM;AAAA,UAClBE,CADkB,GACZ,MAAKJ,KADO,CAClBI,CADkB;AAG1B,aACE,MAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,SAAS,EAAC;AAA3B,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SAA+BA,CAAC,CAAC,mBAAD,CAAhC,CADF,EAEE,MAAC,GAAD,QACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC;AAAhB,SACE,MAAC,OAAD;AAAS,QAAA,GAAG,MAAZ;AAAa,QAAA,KAAK,EAAC,MAAnB;AAA0B,QAAA,GAAG,EAAC,qBAA9B;AAAoD,QAAA,GAAG,EAAC;AAAxD,QADF,EAEE,MAAC,QAAD,QACE,MAAC,SAAD,qBADF,EAEE,MAAC,YAAD,wBAFF,EAGE,MAAC,QAAD,yGAHF,EAIE,MAAC,MAAD,iBAJF,CAFF,CADF,CAFF,CADF,CADF;AAkBD,KA/DkB;;AAEjB,UAAKD,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA,UACCE,QADD,GACc,KAAKF,KADnB,CACCE,QADD;AAAA,UAECD,CAFD,GAEO,KAAKJ,KAFZ,CAECI,CAFD;AAIP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKE,mBAAL,EADH,CADF;AAKD;AAED;;;;;;;;;;;;;EAnBqBtB,S;;AAmEvBe,QAAQ,CAACQ,SAAT,GAAqB;AACnBH,EAAAA,CAAC,EAAEnB,SAAS,CAACuB,IAAV,CAAeC;AADC,CAArB;AAIA,eAAetB,eAAe,CAAC,UAAD,CAAf,CAA4BY,QAA5B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Head from 'next/head'\nimport { withTranslation } from '../i18n'\n\n\n//styling\nimport {\n  Container, Row, Button, Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText\n} from 'reactstrap';\n\n//icons & colors\nimport { FaSearch } from 'react-icons/fa'\nimport { COLORS } from '../Helper/Constants'\n\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n  render() {\n    const { favIndex } = this.state;\n    const { t } = this.props\n\n    return (\n      <div className=\"main-page-container\">\n        {this.renderBodyContainer()}\n      </div>\n    )\n  }\n\n  /*\n  .##........#######...######...####..######...######.\n  .##.......##.....##.##....##...##..##....##.##....##\n  .##.......##.....##.##.........##..##.......##......\n  .##.......##.....##.##...####..##..##........######.\n  .##.......##.....##.##....##...##..##.............##\n  .##.......##.....##.##....##...##..##....##.##....##\n  .########..#######...######...####..######...######.\n  */\n\n  _toggleDropDown = () => {\n    this.setState({ dropdownOpen: !this.state.dropdownOpen })\n  }\n\n  /*\n  ..######...#######..##.....##.########...#######..##....##.########.##....##.########..######.\n  .##....##.##.....##.###...###.##.....##.##.....##.###...##.##.......###...##....##....##....##\n  .##.......##.....##.####.####.##.....##.##.....##.####..##.##.......####..##....##....##......\n  .##.......##.....##.##.###.##.########..##.....##.##.##.##.######...##.##.##....##.....######.\n  .##.......##.....##.##.....##.##........##.....##.##..####.##.......##..####....##..........##\n  .##....##.##.....##.##.....##.##........##.....##.##...###.##.......##...###....##....##....##\n  ..######...#######..##.....##.##.........#######..##....##.########.##....##....##.....######.\n  */\n\n  renderBodyContainer = () => {\n    const { t } = this.props\n\n    return (\n      <Container fluid className=\"spacing\">\n        <div className=\"products-section\">\n          <h3 className=\"section-title\">{t('featured-products')}</h3>\n          <Row>\n            <Card className=\"products-card\">\n              <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n              <CardBody>\n                <CardTitle>Card title</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n                <Button>Button</Button>\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n\nMainPage.propTypes = {\n  t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('mainpage')(MainPage)\n"]},"metadata":{},"sourceType":"module"}